require 'rspec'
require './lib/get_triangle_type'

RSpec.describe "get the triangle type" do
  it 'will return the triangle type based on the lengths of 3 sides' do
    expect(get_triangle_type([2, 3, 4])).to eq("scalene")
    expect(get_triangle_type([4, 4, 7])).to eq("isosceles")
    expect(get_triangle_type([8, 8, 8])).to eq("equilateral")
    expect(get_triangle_type([3, 5, 5, 2])).to eq("not a triangle")
    expect(get_triangle_type([4, 4, 1])).to eq("isosceles")
    expect(get_triangle_type([4, 4, 2])).to eq("isosceles")
    expect(get_triangle_type([3, 1, 3])).to eq("isosceles")
    expect(get_triangle_type([1])).to eq("not a triangle")
    expect(get_triangle_type([4, 4, 3])).to eq("isosceles")
    expect(get_triangle_type([10])).to eq("not a triangle")
    expect(get_triangle_type([4, 1, 4])).to eq("isosceles")
    expect(get_triangle_type([3, 3, 3])).to eq("equilateral")
    expect(get_triangle_type([2, 3, 4])).to eq("scalene")
    # expect(get_triangle_type([1, 5, 5]), "isosceles")
    # expect(get_triangle_type([5, 7, 4]), "scalene")
    # expect(get_triangle_type([3, 3, 2]), "isosceles")
    # expect(get_triangle_type([2, 1, 2]), "isosceles")
    # expect(get_triangle_type([9, 7, 9, 5, 3]), "not a triangle")
    # expect(get_triangle_type([4, 4, 1]), "isosceles")
    # expect(get_triangle_type([10, 8, 3, 2]), "not a triangle")
    # expect(get_triangle_type([4]), "not a triangle")
    # expect(get_triangle_type([4, 6, 9]), "scalene")
    # expect(get_triangle_type([4, 2, 5]), "scalene")
    # expect(get_triangle_type([6, 7]), "not a triangle")
    # expect(get_triangle_type([3, 2, 3]), "isosceles")
    # expect(get_triangle_type([2, 4, 4]), "isosceles")
    # expect(get_triangle_type([3, 3, 1]), "isosceles")
    # expect(get_triangle_type([12, 7, 6]), "scalene")
    # expect(get_triangle_type([6, 2, 6]), "isosceles")
    # expect(get_triangle_type([1, 2, 2]), "isosceles")
    # expect(get_triangle_type([1, 4, 4]), "isosceles")
    # expect(get_triangle_type([4, 4, 2]), "isosceles")
    # expect(get_triangle_type([3, 3, 2]), "isosceles")
    # expect(get_triangle_type([3, 3, 3]), "equilateral")
    # expect(get_triangle_type([9, 9, 3]), "isosceles")
    # expect(get_triangle_type([3, 3, 1]), "isosceles")
    # expect(get_triangle_type([4, 4, 4]), "equilateral")
    # expect(get_triangle_type([4, 3, 3]), "isosceles")
    # expect(get_triangle_type([3, 4, 4]), "isosceles")
    # expect(get_triangle_type([1, 4, 4]), "isosceles")
    # expect(get_triangle_type([4, 7, 9]), "scalene")
    # expect(get_triangle_type([1, 9, 9]), "isosceles")
    # expect(get_triangle_type([2, 2, 2]), "equilateral")
    # expect(get_triangle_type([100, 2, 100]), "isosceles")
  end
end